{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","intervalId","this","window","setInterval","currentDate","console","info","toUTCString","slice","setState","prevProps","name","props","debug","clearInterval","today","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerId","startTimer","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,IAAMC,EAAc,IAAIL,KAGxBM,QAAQC,KAAKF,EAAYG,cAAcC,OAAO,IAAK,IACnD,EAAKC,SAAS,CAAEX,KAAMM,MACrB,OAdP,gCAiBE,SAAmBM,GACbA,EAAUC,OAASV,KAAKW,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDV,KAAKW,MAAMD,SApBpE,kCAwBE,WACET,OAAOY,cAAcb,KAAKD,cAzB9B,oBA4BE,WACE,IAAce,EAAUd,KAAKJ,MAArBC,KACAa,EAASV,KAAKW,MAAdD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAEF,YACD,sBAAMK,UAAU,cAAhB,SACGD,EAAMR,cAAcC,OAAO,IAAK,YAvC3C,GAA2BS,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACE1B,MAAQ,CACN2B,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EAsBEC,WAAa,WACX,EAAKD,QAAUxB,OAAOC,aAAY,WAChC,EAAKM,SAAS,CAAEe,UAAWL,QAC1B,OAzBP,EA4BES,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,KA9B9B,EAiCEM,UAAY,WACV,EAAKtB,SAAS,CAAEgB,UAAU,KAlC9B,uDAQE,WAA2B,IAAD,OACxBxB,KAAKyB,QAAUxB,OAAOC,aAAY,WAChC,EAAKM,SAAS,CAAEe,UAAWL,QAC1B,MACHa,SAASC,iBAAiB,cAAehC,KAAK2B,WAC9CI,SAASC,iBAAiB,QAAShC,KAAK8B,aAb5C,kCAgBE,WACE7B,OAAOY,cAAcb,KAAKyB,SAC1BM,SAASE,oBAAoB,cAAejC,KAAK2B,WACjDI,SAASE,oBAAoB,QAASjC,KAAK8B,aAnB/C,oBAqCE,WACE,MAAgC9B,KAAKJ,MAA7B2B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOd,KAAMa,WA5ClC,GAAyBP,IAAMC,WCb/BiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.84d8f325.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype ClockProps = {\n  name: string,\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state = {\n    date: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      const currentDate = new Date();\n\n      /* eslint-disable no-console */\n      console.info(currentDate.toUTCString().slice(-12, -4));\n      this.setState({ date: currentDate });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps.name !== this.props.name) {\n      /* eslint-disable no-console */\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { date: today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  startTimer = () => {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}